# Generated by Django 5.0.6 on 2025-08-28 11:08

from functools import partial
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models
from django.utils import timezone


def update_game_model(apps, schema_editor, model_name):
    db_alias = schema_editor.connection.alias
    DominoGame = apps.get_model('dominoapp', model_name)
    DataGame = apps.get_model('dominoapp', 'datagame')
    MatchGame = apps.get_model('dominoapp', 'matchgame')
    
    for game in DominoGame.objects.using(db_alias).all():
        match_status = game.status
        if game.status == 'ru' or (game.status == 'fi' and game.perPoints):
            match_status = 'ru'
        elif game.status == 'fg' or (game.status == 'fi' and not game.perPoints):
            match_status = 'fg'
        match = MatchGame.objects.create(
            domino_game=game,
            rounds=game.rounds,
            scoreTeam1=game.scoreTeam1,
            scoreTeam2=game.scoreTeam2,
            score_player1=game.player1.points if game.player1 else 0,
            score_player2=game.player2.points if game.player2 else 0,
            score_player3=game.player3.points if game.player3 else 0,
            score_player4=game.player4.points if game.player4 else 0,
            status = match_status,
            active = True,
            end_time = timezone.now() if game.status=='fg' or (game.status == 'fi' and not game.perPoints) else None
        )
        
        data_status = game.status
        if game.status == 'ru':
            data_status = 'ru'
        elif game.status in ['fi','fg']:
            data_status = 'fi'
        DataGame.objects.create(
            match=match,
            board=game.board,
            leftValue=game.leftValue,
            rightValue=game.rightValue,
            winner=game.winner,
            starter=game.starter,
            next_player=game.next_player,
            player1=game.player1,
            player2=game.player2,
            player3=game.player3,
            player4=game.player4,
            score_player1=game.player1.points if game.player1 else 0,
            score_player2=game.player2.points if game.player2 else 0,
            score_player3=game.player3.points if game.player3 else 0,
            score_player4=game.player4.points if game.player4 else 0,
            lastTime1=game.lastTime1,
            lastTime2=game.lastTime2,
            lastTime3=game.lastTime3,
            lastTime4=game.lastTime4,
            active = True,
            status = data_status,
            end_time = timezone.now() if game.status in ['fi','fg'] else None
        )

class Migration(migrations.Migration):

    dependencies = [
        ('dominoapp', '0040_bankaccount_transaction_bank_account'),
    ]

    operations = [
        
        migrations.CreateModel(
            name='DataGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board', models.CharField(blank=True, default='', max_length=500)),
                ('status', models.CharField(choices=[('wt', 'waiting_players'), ('ready','ready_to_play'), ('ru', 'running'), ('fi', 'finished'), ('pa', 'paused')], default='ru', max_length=32)),
                ('leftValue', models.SmallIntegerField(default=-1)),
                ('rightValue', models.SmallIntegerField(default=-1)),
                ('winner', models.SmallIntegerField(default=-1)),
                ('starter', models.SmallIntegerField(default=-1)),
                ('next_player', models.SmallIntegerField(default=-1)),
                ('scoreTeam1', models.IntegerField(default=0)),
                ('scoreTeam2', models.IntegerField(default=0)),
                ('score_player1', models.IntegerField(default=0)),
                ('score_player2', models.IntegerField(default=0)),
                ('score_player3', models.IntegerField(default=0)),
                ('score_player4', models.IntegerField(default=0)),
                ('lastTime1', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('lastTime2', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('lastTime3', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('lastTime4', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_player1', to='dominoapp.player')),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_player2', to='dominoapp.player')),
                ('player3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_player3', to='dominoapp.player')),
                ('player4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_player4', to='dominoapp.player')),
            ],
        ),        
        migrations.CreateModel(
            name='MatchGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('rounds', models.SmallIntegerField(default=0)),
                ('status', models.CharField(choices=[('wt', 'waiting_players'), ('ready','ready_to_play'), ('ru', 'running'), ('fg', 'game_finished'), ('pa', 'paused')], default='ru', max_length=32)),
                ('scoreTeam1', models.IntegerField(default=0)),
                ('scoreTeam2', models.IntegerField(default=0)),
                ('score_player1', models.IntegerField(default=0)),
                ('score_player2', models.IntegerField(default=0)),
                ('score_player3', models.IntegerField(default=0)),
                ('score_player4', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('domino_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='dominoapp.dominogame')),
            ],
        ),
        migrations.AddField(
            model_name='datagame',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datas', to='dominoapp.matchgame'),
        ),
        ## Crear script para actualizar los datos existentes
        migrations.RunPython(partial(update_game_model, model_name='dominogame'),reverse_code=migrations.RunPython.noop),
        
        migrations.RemoveField(
            model_name='dominogame',
            name='board',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='hours_active',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='lastTime1',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='lastTime2',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='lastTime3',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='lastTime4',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='leftValue',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='next_player',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='player1',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='player2',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='player3',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='player4',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='rightValue',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='rounds',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='scoreTeam1',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='scoreTeam2',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='start_time',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='starter',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='status',
        ),
        migrations.RemoveField(
            model_name='dominogame',
            name='winner',
        ),
        migrations.RemoveField(
            model_name='player',
            name='points',
        ),
        migrations.RemoveField(
            model_name='moveregister',
            name='game',
        ),
        migrations.AddField(
            model_name='moveregister',
            name='data_number',
            field=models.BigIntegerField(default=0),
        ),        
        migrations.AddField(
            model_name='moveregister',
            name='data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_played', to='dominoapp.datagame'),
        ),
    ]
